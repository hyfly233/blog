import{_ as n,c as e,f as a,o as l}from"./app-chPKMbRn.js";const i={};function r(p,s){return l(),e("div",null,s[0]||(s[0]=[a(`<h1 id="spring-mvc" tabindex="-1"><a class="header-anchor" href="#spring-mvc"><span>Spring MVC</span></a></h1><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h2><h3 id="什么是-springmvc" tabindex="-1"><a class="header-anchor" href="#什么是-springmvc"><span>什么是 SpringMvc？</span></a></h3><p>SpringMvc 是 spring 的一个模块，基于 MVC 的一个框架，无需中间整合层来整合。</p><h3 id="spring-mvc-的优点" tabindex="-1"><a class="header-anchor" href="#spring-mvc-的优点"><span>Spring MVC 的优点</span></a></h3><p>1）它是基于组件技术的.全部的应用对象,无论控制器和视图,还是业务对象之类的都是 java 组件.并且和 Spring 提供的其他基础结构紧密集成.</p><p>2）不依赖于 Servlet API(目标虽是如此,但是在实现的时候确实是依赖于 Servlet 的)</p><p>3）可以任意使用各种视图技术,而不仅仅局限于 JSP</p><p>4）支持各种请求资源的映射策略</p><p>5）它应是易于扩展的</p><h3 id="springmvc-工作原理" tabindex="-1"><a class="header-anchor" href="#springmvc-工作原理"><span>SpringMVC 工作原理？</span></a></h3><p>1）客户端发送请求到 DispatcherServlet</p><p>2）DispatcherServlet 查询 handlerMapping 找到处理请求的 Controller</p><p>3）Controller 调用业务逻辑后，返回 ModelAndView</p><p>4）DispatcherServlet 查询 ModelAndView，找到指定视图</p><p>5）视图将结果返回到客户端</p><h3 id="springmvc-的控制器是不是单例模式-如果是-有什么问题-怎么解决" tabindex="-1"><a class="header-anchor" href="#springmvc-的控制器是不是单例模式-如果是-有什么问题-怎么解决"><span>SpringMvc 的控制器是不是单例模式,如果是,有什么问题,怎么解决？</span></a></h3><p>是单例模式,所以在多线程访问的时候有线程安全问题,不要用同步,会影响性能的,解决方案是在控制器里面不能写字段。</p><h3 id="如果你也用过-struts2-简单介绍下-springmvc-和-struts2-的区别有哪些" tabindex="-1"><a class="header-anchor" href="#如果你也用过-struts2-简单介绍下-springmvc-和-struts2-的区别有哪些"><span>如果你也用过 struts2.简单介绍下 springMVC 和 struts2 的区别有哪些?</span></a></h3><p>1）springmvc 的入口是一个 servlet 即前端控制器，而 struts2 入口是一个 filter 过虑器。</p><p>2）springmvc 是基于方法开发(一个 url 对应一个方法)，请求参数传递到方法的形参，可以设计为单例或多例(建议单例)，struts2 是基于类开发，传递参数是通过类的属性，只能设计为多例。</p><p>3）Struts 采用值栈存储请求和响应的数据，通过 OGNL 存取数据，springmvc 通过参数解析器是将 request 请求内容解析，并给方法形参赋值，将数据和视图封装成 ModelAndView 对象，最后又将 ModelAndView 中的模型数据通过 reques 域传输到页面。Jsp 视图解析器默认使用 jstl。</p><h3 id="spingmvc-中的控制器的注解一般用那个-有没有别的注解可以替代" tabindex="-1"><a class="header-anchor" href="#spingmvc-中的控制器的注解一般用那个-有没有别的注解可以替代"><span>SpingMvc 中的控制器的注解一般用那个,有没有别的注解可以替代？</span></a></h3><p>一般用@Conntroller 注解,表示是表现层,不能用用别的注解代替。</p><h3 id="requestmapping-注解用在类上面有什么作用" tabindex="-1"><a class="header-anchor" href="#requestmapping-注解用在类上面有什么作用"><span>@RequestMapping 注解用在类上面有什么作用？</span></a></h3><p>是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。</p><h3 id="怎么样把某个请求映射到特定的方法上面" tabindex="-1"><a class="header-anchor" href="#怎么样把某个请求映射到特定的方法上面"><span>怎么样把某个请求映射到特定的方法上面？</span></a></h3><p>直接在方法上面加上注解@RequestMapping,并且在这个注解里面写上要拦截的路径</p><h3 id="如果在拦截请求中-我想拦截-get-方式提交的方法-怎么配置" tabindex="-1"><a class="header-anchor" href="#如果在拦截请求中-我想拦截-get-方式提交的方法-怎么配置"><span>如果在拦截请求中,我想拦截 get 方式提交的方法,怎么配置？</span></a></h3><p>可以在@RequestMapping 注解里面加上 method=RequestMethod.GET</p><h3 id="怎么样在方法里面得到-request-或者-session" tabindex="-1"><a class="header-anchor" href="#怎么样在方法里面得到-request-或者-session"><span>怎么样在方法里面得到 Request,或者 Session？</span></a></h3><p>直接在方法的形参中声明 request,SpringMvc 就自动把 request 对象传入</p><h3 id="我想在拦截的方法里面得到从前台传入的参数-怎么得到" tabindex="-1"><a class="header-anchor" href="#我想在拦截的方法里面得到从前台传入的参数-怎么得到"><span>我想在拦截的方法里面得到从前台传入的参数,怎么得到？</span></a></h3><p>直接在形参里面声明这个参数就可以,但必须名字和传过来的参数一样</p><h3 id="如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象" tabindex="-1"><a class="header-anchor" href="#如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象"><span>如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？</span></a></h3><p>直接在方法中声明这个对象,SpringMvc 就自动会把属性赋值到这个对象里面。</p><h3 id="springmvc-中函数的返回值是什么" tabindex="-1"><a class="header-anchor" href="#springmvc-中函数的返回值是什么"><span>SpringMvc 中函数的返回值是什么？</span></a></h3><p>返回值可以有很多类型,有 String, ModelAndView,当一般用 String 比较好。</p><h3 id="springmvc-怎么样设定重定向和转发的" tabindex="-1"><a class="header-anchor" href="#springmvc-怎么样设定重定向和转发的"><span>SpringMVC 怎么样设定重定向和转发的？</span></a></h3><p>在返回值前面加&quot;forward:&quot;就可以让结果转发,譬如&quot;forward:user.do?name=method4&quot; 在返回值前面加&quot;redirect:&quot;就可以让返回值重定向,譬如&quot;redirect:http://www.baidu.com&quot;</p><h3 id="springmvc-用什么对象从后台向前台传递数据的" tabindex="-1"><a class="header-anchor" href="#springmvc-用什么对象从后台向前台传递数据的"><span>SpringMvc 用什么对象从后台向前台传递数据的？</span></a></h3><p>通过 ModelMap 对象,可以在这个对象里面用 put 方法,把对象加到里面,前台就可以通过 el 表达式拿到。</p><h3 id="springmvc-中有个类把视图和数据都合并的一起的-叫什么" tabindex="-1"><a class="header-anchor" href="#springmvc-中有个类把视图和数据都合并的一起的-叫什么"><span>SpringMvc 中有个类把视图和数据都合并的一起的,叫什么？</span></a></h3><p>ModelAndView。</p><h3 id="怎么样把-modelmap-里面的数据放入-session-里面" tabindex="-1"><a class="header-anchor" href="#怎么样把-modelmap-里面的数据放入-session-里面"><span>怎么样把 ModelMap 里面的数据放入 Session 里面？</span></a></h3><p>可以在类上面加上@SessionAttributes 注解,里面包含的字符串就是要放入 session 里面的 key</p><h3 id="springmvc-怎么和-ajax-相互调用的" tabindex="-1"><a class="header-anchor" href="#springmvc-怎么和-ajax-相互调用的"><span>SpringMvc 怎么和 AJAX 相互调用的？</span></a></h3><p>通过 Jackson 框架就可以把 Java 里面的对象直接转化成 Js 可以识别的 Json 对象。</p><p>具体步骤如下 ：</p><p>1）加入 Jackson.jar</p><p>2）在配置文件中配置 json 的映射</p><p>3）在接受 Ajax 方法里面可以直接返回 Object,List 等,但方法前面要加上@ResponseBody 注解</p><p>21、当一个方法向 AJAX 返回特殊对象,譬如 Object,List 等,需要做什么处理？答：要加上@ResponseBody 注解 22、SpringMvc 里面拦截器是怎么写的</p><p>答：有两种写法,一种是实现接口,另外一种是继承适配器类,然后在 SpringMvc 的配置文件中配置拦截器即可：</p><div class="language-xml line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre class="shiki nord vp-code" style="background-color:#2e3440ff;color:#d8dee9ff language-xml;"><code><span class="line"><span class="line"><span style="color:#616E88;">&lt;!-- 配置 SpringMvc 的拦截器 --&gt;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">mvc</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">interceptors&gt;</span><span style="color:#D8DEE9FF;">    </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#616E88;">  &lt;!-- 配置一个拦截器的 Bean 就可以了 默认是对所有请求都拦截 --&gt;</span><span style="color:#D8DEE9FF;">    </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">  &lt;bean</span><span style="color:#8FBCBB;"> id</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">myInterceptor</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">com.et.action.MyHandlerInterceptor</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;">&gt;&lt;/bean&gt;</span><span style="color:#D8DEE9FF;">      </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#616E88;">  &lt;!-- 只针对部分请求拦截 --&gt;</span><span style="color:#D8DEE9FF;">      </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">  &lt;</span><span style="color:#8FBCBB;">mvc</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">interceptor&gt;</span><span style="color:#D8DEE9FF;">       </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D8DEE9FF;">    •     </span><span style="color:#81A1C1;">&lt;</span><span style="color:#8FBCBB;">mvc</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">mapping</span><span style="color:#8FBCBB;"> path</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">/modelMap.do</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#D8DEE9FF;">        </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#D8DEE9FF;">    •     </span><span style="color:#81A1C1;">&lt;bean</span><span style="color:#8FBCBB;"> class</span><span style="color:#D8DEE9FF;">=</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">com.et.action.MyHandlerInterceptorAdapter</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#81A1C1;"> /&gt;</span><span style="color:#D8DEE9FF;">  </span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">  &lt;/</span><span style="color:#8FBCBB;">mvc</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">interceptor&gt;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">&lt;/</span><span style="color:#8FBCBB;">mvc</span><span style="color:#ECEFF4;">:</span><span style="color:#81A1C1;">interceptors&gt;</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="启动运行相关" tabindex="-1"><a class="header-anchor" href="#启动运行相关"><span>启动运行相关</span></a></h2><h3 id="spring-mvc-启动流程" tabindex="-1"><a class="header-anchor" href="#spring-mvc-启动流程"><span>Spring MVC 启动流程</span></a></h3><p>在 web.xml 文件中给 Spring MVC 的 Servlet 配置了 load-on-startup，所以程序启动的时候会初始化 Spring MVC，在 HttpServletBean 中将配置的 contextConfigLocation 属性设置到 Servlet 中，然后在 FrameworkServlet 中创建了 WebApplicationContext, DispatcherServlet 根据 contextConfigLocation 配置的 classpath 下的 xml 文件初始化了Spring MVC 总的组件。</p><h3 id="spring-mvc-运行流程" tabindex="-1"><a class="header-anchor" href="#spring-mvc-运行流程"><span>Spring MVC 运行流程</span></a></h3><ol><li>用户发起请求到<strong>前端控制器DispatcherServlet</strong></li><li><strong>前端控制器DispatcherServlet</strong>收到请求调用<strong>处理器映射器HandlerMapping</strong>查找<strong>处理器Handler</strong>（可以根据xml配置、注解进行查找），并<strong>前端控制器DispatcherServlet</strong>返回<strong>处理器Handler</strong></li><li><strong>前端控制器DispatcherServlet</strong>调用<strong>处理器适配器HandlerAdaptor</strong>去执行<strong>处理器Handler</strong></li><li><strong>处理器Handler</strong>执行完成给<strong>处理器适配器HandlerAdaptor</strong>返回<strong>ModelAndView</strong>（ModelAndView是springmvc框架的一个底层对象，包括Model和view）</li><li><strong>处理器适配器HandlerAdaptor</strong>向<strong>前端控制器DispatcherServlet</strong>返回<strong>ModelAndView</strong></li><li><strong>前端控制器DispatcherServlet</strong>请求<strong>视图解析器ViewReslover</strong>对<strong>ModelAndView</strong>进行视图解析</li><li><strong>视图解析器ViewReslover</strong>向<strong>前端控制器DispatcherServlet</strong>返回<strong>View</strong></li><li><strong>前端控制器DispatcherServlet</strong>根据<strong>View</strong>进行<strong>视图渲染</strong>（ 将ModelAndView中的模型数据填充到request域）</li><li><strong>前端控制器DispatcherServlet</strong>向用户响应结果</li></ol><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><h3 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span></span></a></h3>`,62)]))}const c=n(i,[["render",r],["__file","SpringMvc.html.vue"]]),o=JSON.parse('{"path":"/md/interview/java/framework/spring/SpringMvc.html","title":"Spring MVC","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[{"level":3,"title":"什么是 SpringMvc？","slug":"什么是-springmvc","link":"#什么是-springmvc","children":[]},{"level":3,"title":"Spring MVC 的优点","slug":"spring-mvc-的优点","link":"#spring-mvc-的优点","children":[]},{"level":3,"title":"SpringMVC 工作原理？","slug":"springmvc-工作原理","link":"#springmvc-工作原理","children":[]},{"level":3,"title":"SpringMvc 的控制器是不是单例模式,如果是,有什么问题,怎么解决？","slug":"springmvc-的控制器是不是单例模式-如果是-有什么问题-怎么解决","link":"#springmvc-的控制器是不是单例模式-如果是-有什么问题-怎么解决","children":[]},{"level":3,"title":"如果你也用过 struts2.简单介绍下 springMVC 和 struts2 的区别有哪些?","slug":"如果你也用过-struts2-简单介绍下-springmvc-和-struts2-的区别有哪些","link":"#如果你也用过-struts2-简单介绍下-springmvc-和-struts2-的区别有哪些","children":[]},{"level":3,"title":"SpingMvc 中的控制器的注解一般用那个,有没有别的注解可以替代？","slug":"spingmvc-中的控制器的注解一般用那个-有没有别的注解可以替代","link":"#spingmvc-中的控制器的注解一般用那个-有没有别的注解可以替代","children":[]},{"level":3,"title":"@RequestMapping 注解用在类上面有什么作用？","slug":"requestmapping-注解用在类上面有什么作用","link":"#requestmapping-注解用在类上面有什么作用","children":[]},{"level":3,"title":"怎么样把某个请求映射到特定的方法上面？","slug":"怎么样把某个请求映射到特定的方法上面","link":"#怎么样把某个请求映射到特定的方法上面","children":[]},{"level":3,"title":"如果在拦截请求中,我想拦截 get 方式提交的方法,怎么配置？","slug":"如果在拦截请求中-我想拦截-get-方式提交的方法-怎么配置","link":"#如果在拦截请求中-我想拦截-get-方式提交的方法-怎么配置","children":[]},{"level":3,"title":"怎么样在方法里面得到 Request,或者 Session？","slug":"怎么样在方法里面得到-request-或者-session","link":"#怎么样在方法里面得到-request-或者-session","children":[]},{"level":3,"title":"我想在拦截的方法里面得到从前台传入的参数,怎么得到？","slug":"我想在拦截的方法里面得到从前台传入的参数-怎么得到","link":"#我想在拦截的方法里面得到从前台传入的参数-怎么得到","children":[]},{"level":3,"title":"如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？","slug":"如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象","link":"#如果前台有很多个参数传入-并且这些参数都是一个对象的-那么怎么样快速得到这个对象","children":[]},{"level":3,"title":"SpringMvc 中函数的返回值是什么？","slug":"springmvc-中函数的返回值是什么","link":"#springmvc-中函数的返回值是什么","children":[]},{"level":3,"title":"SpringMVC 怎么样设定重定向和转发的？","slug":"springmvc-怎么样设定重定向和转发的","link":"#springmvc-怎么样设定重定向和转发的","children":[]},{"level":3,"title":"SpringMvc 用什么对象从后台向前台传递数据的？","slug":"springmvc-用什么对象从后台向前台传递数据的","link":"#springmvc-用什么对象从后台向前台传递数据的","children":[]},{"level":3,"title":"SpringMvc 中有个类把视图和数据都合并的一起的,叫什么？","slug":"springmvc-中有个类把视图和数据都合并的一起的-叫什么","link":"#springmvc-中有个类把视图和数据都合并的一起的-叫什么","children":[]},{"level":3,"title":"怎么样把 ModelMap 里面的数据放入 Session 里面？","slug":"怎么样把-modelmap-里面的数据放入-session-里面","link":"#怎么样把-modelmap-里面的数据放入-session-里面","children":[]},{"level":3,"title":"SpringMvc 怎么和 AJAX 相互调用的？","slug":"springmvc-怎么和-ajax-相互调用的","link":"#springmvc-怎么和-ajax-相互调用的","children":[]}]},{"level":2,"title":"启动运行相关","slug":"启动运行相关","link":"#启动运行相关","children":[{"level":3,"title":"Spring MVC 启动流程","slug":"spring-mvc-启动流程","link":"#spring-mvc-启动流程","children":[]},{"level":3,"title":"Spring MVC 运行流程","slug":"spring-mvc-运行流程","link":"#spring-mvc-运行流程","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"","slug":"-1","link":"#-1","children":[]}]}],"git":{"updatedTime":1711074643000,"contributors":[{"name":"hyfly233","username":"hyfly233","email":"hyfly233@outlook.com","commits":4,"url":"https://github.com/hyfly233"}]},"filePathRelative":"md/interview/java/framework/spring/SpringMvc.md"}');export{c as comp,o as data};
