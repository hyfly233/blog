import{_ as a,c as n,f as r,o as s}from"./app-chPKMbRn.js";const i={};function l(t,e){return s(),n("div",null,e[0]||(e[0]=[r('<h1 id="二叉树排序" tabindex="-1"><a class="header-anchor" href="#二叉树排序"><span>二叉树排序</span></a></h1><h2 id="二叉树排序-binary-tree-sort" tabindex="-1"><a class="header-anchor" href="#二叉树排序-binary-tree-sort"><span>二叉树排序（Binary Tree Sort）</span></a></h2><ul><li><strong>描述</strong>：将元素插入二叉搜索树，然后进行中序遍历得到有序序列。</li><li><strong>时间复杂度</strong>：O(n log n) 平均，O(n^2) 最坏</li><li><strong>空间复杂度</strong>：O(n)</li><li><strong>稳定性</strong>：稳定</li></ul><h2 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h2><div class="language-java line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="shiki nord vp-code" style="background-color:#2e3440ff;color:#d8dee9ff language-java;"><code><span class="line"><span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="python" tabindex="-1"><a class="header-anchor" href="#python"><span>Python</span></a></h2><div class="language-python line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="py" data-title="py"><pre class="shiki nord vp-code" style="background-color:#2e3440ff;color:#d8dee9ff language-python;"><code><span class="line"><span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="go" tabindex="-1"><a class="header-anchor" href="#go"><span>Go</span></a></h2><div class="language-go line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre class="shiki nord vp-code" style="background-color:#2e3440ff;color:#d8dee9ff language-go;"><code><span class="line"><span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',9)]))}const d=a(i,[["render",l],["__file","binary_tree_sort.html.vue"]]),c=JSON.parse('{"path":"/md/article/algorithm/sort/binary_tree_sort.html","title":"二叉树排序","lang":"en-US","frontmatter":{"title":"二叉树排序"},"headers":[{"level":2,"title":"二叉树排序（Binary Tree Sort）","slug":"二叉树排序-binary-tree-sort","link":"#二叉树排序-binary-tree-sort","children":[]},{"level":2,"title":"Java","slug":"java","link":"#java","children":[]},{"level":2,"title":"Python","slug":"python","link":"#python","children":[]},{"level":2,"title":"Go","slug":"go","link":"#go","children":[]}],"git":{"updatedTime":1735987270000,"contributors":[{"name":"hyfly233","username":"hyfly233","email":"hyfly233@outlook.com","commits":1,"url":"https://github.com/hyfly233"}]},"filePathRelative":"md/article/algorithm/sort/binary_tree_sort.md"}');export{d as comp,c as data};
