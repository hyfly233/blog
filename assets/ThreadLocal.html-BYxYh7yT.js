import{_ as a,c as l,f as n,o as e}from"./app-chPKMbRn.js";const p={};function o(r,s){return e(),l("div",null,s[0]||(s[0]=[n(`<h2 id="threadlocal" tabindex="-1"><a class="header-anchor" href="#threadlocal"><span>ThreadLocal</span></a></h2><h3 id="threadlocal-是什么" tabindex="-1"><a class="header-anchor" href="#threadlocal-是什么"><span>ThreadLocal 是什么</span></a></h3><ul><li>ThreadLocal 其实就是线程本地变量，他会在每个线程都创建一个副本，那么在线程之间访问内部副本变量就行了，做到了线程之间互相隔离<img src="https://cdn.nlark.com/yuque/0/2023/png/29236088/1675687054141-6d877fd1-3a94-451b-b939-9b2f6a1b4fd5.png#averageHue=%23edf0e6&amp;clientId=u00400ee8-e274-4&amp;from=paste&amp;id=gvHot&amp;originHeight=626&amp;originWidth=1984&amp;originalType=url&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=513616&amp;status=done&amp;style=none&amp;taskId=ue84ab641-9cbf-461e-ac57-8a6c1fd9fff&amp;title=" alt="image.png"></li><li>ThreadLocal 有一个静态内部类 ThreadLocalMap，ThreadLocalMap 包含了一个 Entry 数组，Entry 本身是一个弱引用，他的 key 是指向 ThreadLocal 的弱引用，弱引用的目的是为了防止内存泄露，如果是强引用那么除非线程结束，否则无法终止，可能会有内存泄漏的风险</li><li>但是这样还是会存在内存泄露的问题，假如 key 和 ThreadLocal 对象被回收之后，entry 中就存在 key 为 null ，但是 value 有值的 entry 对象，但是永远没办法被访问到，同样除非线程结束运行。解决方法就是调用 remove 方法删除 entry 对象</li></ul><h3 id="threadlocal-的底层实现形式及数据结构" tabindex="-1"><a class="header-anchor" href="#threadlocal-的底层实现形式及数据结构"><span>ThreadLocal 的底层实现形式及数据结构</span></a></h3><p>Thread 类中有两个变量 threadLocals 和 inheritableThreadLocals，二者都是 ThreadLocal 内部类 ThreadLocalMap 类型的变量，内部类 ThreadLocalMap 类似于一个 HashMap。在默认情况下，每个线程中的这两个变量都为 null，只有当线程第一次调用 ThreadLocal#set() 或者 ThreadLocal#get() 方法的时候才会创建他们。ThreadLocal 类型的本地变量是存放在具体的线程空间上，其本身相当于一个装载本地变量的工具壳，通过 ThreadLocal#set() 方法将 value 添加到调用线程的 threadLocals 中，当调用线程调用 ThreadLocal#get() 方法时候能够从它的 threadLocals 中取出变量。如果调用线程一直不终止，那么这个本地变量将会一直存放在他的 threadLocals 中，所以不使用本地变量的时候需要调用 ThreadLocal#remove() 方法将 threadLocals 中删除不用的本地变量，防止出现内存泄漏</p><div class="language-java line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="shiki nord vp-code" style="background-color:#2e3440ff;color:#d8dee9ff language-java;"><code><span class="line"><span class="line"><span style="color:#8FBCBB;">ThreadLocal</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">ThreadLocalMap</span><span style="color:#D8DEE9;"> threadLocals</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> null;</span></span></span>
<span class="line"><span class="line"><span style="color:#8FBCBB;">ThreadLocal</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">ThreadLocalMap</span><span style="color:#D8DEE9;"> inheritableThreadLocals</span><span style="color:#81A1C1;"> =</span><span style="color:#81A1C1;"> null;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">public</span><span style="color:#8FBCBB;"> T</span><span style="color:#88C0D0;"> get</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#8FBCBB;">    Thread</span><span style="color:#D8DEE9;"> t</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> Thread</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">currentThread</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#8FBCBB;">    ThreadLocalMap</span><span style="color:#D8DEE9;"> map</span><span style="color:#81A1C1;"> =</span><span style="color:#88C0D0;"> getMap</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9FF;">t</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    if</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9FF;">map </span><span style="color:#81A1C1;">!=</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#8FBCBB;">        ThreadLocalMap</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">Entry</span><span style="color:#D8DEE9;"> e</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> map</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">getEntry</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">this</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">        if</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9FF;">e </span><span style="color:#81A1C1;">!=</span><span style="color:#81A1C1;"> null</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">            @</span><span style="color:#D08770;">SuppressWarnings</span><span style="color:#ECEFF4;">(</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">unchecked</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#8FBCBB;">            T</span><span style="color:#D8DEE9;"> result</span><span style="color:#81A1C1;"> =</span><span style="color:#ECEFF4;"> (</span><span style="color:#D8DEE9FF;">T</span><span style="color:#ECEFF4;">)</span><span style="color:#D8DEE9;">e</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">value</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">            return</span><span style="color:#D8DEE9FF;"> result</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">        }</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">    }</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#88C0D0;"> setInitialValue</span><span style="color:#ECEFF4;">()</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">}</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#8FBCBB;">ThreadLocalMap</span><span style="color:#88C0D0;"> getMap</span><span style="color:#ECEFF4;">(</span><span style="color:#8FBCBB;">Thread</span><span style="color:#D8DEE9FF;"> t</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    return</span><span style="color:#D8DEE9;"> t</span><span style="color:#ECEFF4;">.</span><span style="color:#D8DEE9;">threadLocals</span><span style="color:#81A1C1;">;</span><span style="color:#D8DEE9FF;"> </span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="threadloal的作用是什么-todo" tabindex="-1"><a class="header-anchor" href="#threadloal的作用是什么-todo"><span>ThreadLoal的作用是什么 todo</span></a></h3><p>ThreadLocal 是一种以空间换时间的做法，在每个 Thread 里面维护了一个 ThreadLocal。ThreadLocalMap 把数据进行隔离，数据不共享，自然就没有线程安全方面的问题</p><h3 id="threadlocal-原理分析" tabindex="-1"><a class="header-anchor" href="#threadlocal-原理分析"><span>ThreadLocal 原理分析</span></a></h3><p>ThreadLocal 解决多线程程序的并发问题。ThreadLocal，顾名思义是线程的一个本地化对象，当工作于多线程中的对象使用 ThreadLocal 维护变量时，ThreadLocal 为每个使用该变量的线程分配一个独立的变量副本，所以每一个线程都可以独立的改变自己的副本，而不影响其他线程所对应的副本。从线程的角度看，这个变量就像是线程的本地变量。 ThreadLocal 类只有四个方法，能用上的也就是下面三个方法：</p><ul><li>void set(T value)：设置当前线程的线程局部变量的值。</li><li>T get()：获得当前线程所对应的线程局部变量的值。</li><li>void remove()：删除当前线程中线程局部变量的值。</li></ul><h3 id="threadlocal-是如何做到为每一个线程维护一份独立的变量副本的呢" tabindex="-1"><a class="header-anchor" href="#threadlocal-是如何做到为每一个线程维护一份独立的变量副本的呢"><span>ThreadLocal 是如何做到为每一个线程维护一份独立的变量副本的呢？</span></a></h3><p>在 ThreadLocal 类中有一个 Map，键为线程对象，值是其线程对应的变量的副本</p><div class="language-java line-numbers-mode line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="shiki nord vp-code" style="background-color:#2e3440ff;color:#d8dee9ff language-java;"><code><span class="line"><span class="line"><span style="color:#81A1C1;">import</span><span style="color:#8FBCBB;"> java</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">util</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">Collections</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">import</span><span style="color:#8FBCBB;"> java</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">util</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">HashMap</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">import</span><span style="color:#8FBCBB;"> java</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">util</span><span style="color:#ECEFF4;">.</span><span style="color:#8FBCBB;">Map</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">public</span><span style="color:#81A1C1;"> class</span><span style="color:#8FBCBB;"> MyThreadLocal</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">T</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#ECEFF4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    private</span><span style="color:#8FBCBB;"> Map</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">Thread</span><span style="color:#ECEFF4;">,</span><span style="color:#8FBCBB;"> T</span><span style="color:#ECEFF4;">&gt;</span><span style="color:#D8DEE9;"> map</span><span style="color:#81A1C1;"> =</span><span style="color:#D8DEE9;"> Collections</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">synchronizedMap</span><span style="color:#ECEFF4;">(</span><span style="color:#81A1C1;">new</span><span style="color:#8FBCBB;"> HashMap</span><span style="color:#ECEFF4;">&lt;</span><span style="color:#8FBCBB;">Thread</span><span style="color:#ECEFF4;">,</span><span style="color:#8FBCBB;"> T</span><span style="color:#ECEFF4;">&gt;())</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    public</span><span style="color:#81A1C1;"> void</span><span style="color:#88C0D0;"> set</span><span style="color:#ECEFF4;">(</span><span style="color:#8FBCBB;">T</span><span style="color:#D8DEE9;"> newValue</span><span style="color:#ECEFF4;">)</span><span style="color:#ECEFF4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#D8DEE9;">        map</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">put</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">Thread</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">currentThread</span><span style="color:#ECEFF4;">(),</span><span style="color:#D8DEE9FF;"> newValue</span><span style="color:#ECEFF4;">)</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">    }</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    public</span><span style="color:#8FBCBB;"> T</span><span style="color:#88C0D0;"> get</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">        return</span><span style="color:#D8DEE9;"> map</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">get</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">Thread</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">currentThread</span><span style="color:#ECEFF4;">())</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">    }</span></span></span>
<span class="line"><span class="line"></span></span>
<span class="line"><span class="line"><span style="color:#81A1C1;">    public</span><span style="color:#81A1C1;"> void</span><span style="color:#88C0D0;"> remove</span><span style="color:#ECEFF4;">()</span><span style="color:#ECEFF4;"> {</span></span></span>
<span class="line"><span class="line"><span style="color:#D8DEE9;">        map</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">remove</span><span style="color:#ECEFF4;">(</span><span style="color:#D8DEE9;">Thread</span><span style="color:#ECEFF4;">.</span><span style="color:#88C0D0;">currentThread</span><span style="color:#ECEFF4;">())</span><span style="color:#81A1C1;">;</span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">    }</span></span></span>
<span class="line"><span class="line"><span style="color:#ECEFF4;">}</span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="谈一谈threadlocal" tabindex="-1"><a class="header-anchor" href="#谈一谈threadlocal"><span>谈一谈ThreadLocal</span></a></h3><p>ThreadLocal 是线程共享变量。ThreadLoacl 有一个静态内部类 ThreadLocalMap，其 Key 是 ThreadLocal 对象，值是 Entry 对象，ThreadLocalMap是每个线程私有的。</p><ul><li>set 给ThreadLocalMap设置值。</li><li>get 获取ThreadLocalMap。</li><li>remove 删除ThreadLocalMap类型的对象。</li></ul><p>存在的问题：对于线程池，由于线程池会重用 Thread 对象，因此与 Thread 绑定的 ThreadLocal 也会被重用，造成一系列问题。 比如说内存泄漏。由于 ThreadLocal 是弱引用，但 Entry 的 value 是强引用，因此当 ThreadLocal 被垃圾回收后，value 依旧不会被释放，产生内存泄漏。</p>`,18)]))}const i=a(p,[["render",o],["__file","ThreadLocal.html.vue"]]),t=JSON.parse('{"path":"/md/interview/java/multithread/ThreadLocal.html","title":"","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"ThreadLocal","slug":"threadlocal","link":"#threadlocal","children":[{"level":3,"title":"ThreadLocal 是什么","slug":"threadlocal-是什么","link":"#threadlocal-是什么","children":[]},{"level":3,"title":"ThreadLocal 的底层实现形式及数据结构","slug":"threadlocal-的底层实现形式及数据结构","link":"#threadlocal-的底层实现形式及数据结构","children":[]},{"level":3,"title":"ThreadLoal的作用是什么 todo","slug":"threadloal的作用是什么-todo","link":"#threadloal的作用是什么-todo","children":[]},{"level":3,"title":"ThreadLocal 原理分析","slug":"threadlocal-原理分析","link":"#threadlocal-原理分析","children":[]},{"level":3,"title":"ThreadLocal 是如何做到为每一个线程维护一份独立的变量副本的呢？","slug":"threadlocal-是如何做到为每一个线程维护一份独立的变量副本的呢","link":"#threadlocal-是如何做到为每一个线程维护一份独立的变量副本的呢","children":[]},{"level":3,"title":"谈一谈ThreadLocal","slug":"谈一谈threadlocal","link":"#谈一谈threadlocal","children":[]}]}],"git":{"updatedTime":1711074643000,"contributors":[{"name":"hyfly233","username":"hyfly233","email":"hyfly233@outlook.com","commits":3,"url":"https://github.com/hyfly233"}]},"filePathRelative":"md/interview/java/multithread/ThreadLocal.md"}');export{i as comp,t as data};
